import { type ReactNode, useEffect } from 'react';
import { type FormInstance, Form, Row, Col{{#each fields}}{{#unless (isNilorEmpty this.[1].$ui.title)}}, {{this.[1].$ui.controls}}{{/unless}}{{/each}} } from "antd";
{{#unless (isNilorEmpty foreigns)}}
import { isArray, isNumber } from "lodash-es";
import { useSuspenseQuery } from "@tanstack/react-query";
import $axios from "@/utils/$axios";
{{/unless }}

export default function useQueryForm(queries?: Record<string, any>): [ReactNode, FormInstance<any>] {
  const [form] = Form.useForm();
  {{#each foreigns}}
  const {data: {{pluralizeLowerCamelCase this.[1].entityName~}} } = useSuspenseQuery({
    queryKey: [`/api/{{pluralizeKebabCase this.[1].entityName}}`, {{{this.[1].condition}}}],
    async queryFn({queryKey}) {
      const res: {total: number, data: any[]} | any[] = await $axios.get(queryKey[0] as string, {params: queryKey[1] || {}});
      if (isArray(res)) {
        return res;
      }
      else if (isNumber(res.total) && isArray(res.data)) {
        return res.data;
      }
    }
  });
  {{/each}}

  const component = (
    <Form form={form}>
      <Row gutter={16}>
        {{#each fields}}
        {{#unless (isNilorEmpty this.[1].$ui.title)}}
        <Col span={6}>
          <Form.Item label={"{{this.[1].$ui.title}}"} name={"{{this.[0]}}"}>
            {{getQueryFormControls this}}
          </Form.Item>
        </Col>
        {{/unless}}
        {{/each}}
      </Row>
    </Form>
  );
  useEffect(() => {
    form.setFieldsValue(queries);
  }, []);

  return [component, form];
}
