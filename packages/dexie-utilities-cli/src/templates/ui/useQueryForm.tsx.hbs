import { type ReactNode, useEffect } from 'react';
import { type FormInstance, Form, Row, Col, {{getControlsNamedImports $ui}} } from "antd";
{{#unless (isNilorEmpty $ui-foreigns)}}
import { isArray, isNumber } from "lodash-es";
import { useSuspenseQuery } from "@tanstack/react-query";
import $axios from "@/utils/$axios";
{{/unless}}
 
export default function useQueryForm(queries?: Record<string, any>): [ReactNode, FormInstance<any>] {
  const [form] = Form.useForm();
  {{#each $ui-foreigns}}
  const {data: {{pluralize (getForeignPropertyName this.[0])~}} } = useSuspenseQuery({
    queryKey: [`/api/{{pluralizeKebabCase this.[1].foreignTableName}}`, {{{this.[1].foreignCondition}}}],
    async queryFn({queryKey}) {
      const res: {total: number, data: any[]} | any[] = await $axios.get(queryKey[0] as string, {params: queryKey[1] || {}});
      if (isArray(res)) {
        return res;
      }
      else if (isNumber(res.total) && isArray(res.data)) {
        return res.data;
      }
    }
  });
  {{/each}}

  const component = (
    <Form form={form}>
      <Row gutter={16}>
        {{#each $ui}}
        {{#if (isAvailableQueryFormControls this.controls)}}
        <Col span={ {{~getColSpan this.controls~}} }>
          <Form.Item label={"{{this.title}}"} name={"{{@key}}"}>
            {{getFormControls @key this}}
          </Form.Item>
        </Col>
        {{/if}}
        {{/each}}
      </Row>
    </Form>
  );
  useEffect(() => {
    form.setFieldsValue(queries);
  }, []);

  return [component, form];
}
