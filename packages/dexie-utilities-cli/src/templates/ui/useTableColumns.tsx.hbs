import { useMemo } from 'react';
import { Space } from "antd";
import dayjs from "dayjs";
import { useNavigate } from 'react-router-dom';
import { AiOutlineEdit, AiOutlineDelete } from "react-icons/ai";

export default function useTableColumns() {
  const navigate = useNavigate();

  const columns = useMemo(() => {
    return [
      {{#each $ui}}
      {{#unless (isNilorEmpty this.title)}}
      {{#if (isAvailableTableColumnControls this.controls)}}
      { title: "{{this.title}}", dataIndex: "{{@key}}", key: "{{@key}}", sorter: {{this.table-column.sorter}}, align: "{{this.table-column.align}}" as "{{this.table-column.align}}", width: {{this.table-column.width}}, 
        {{#each this.table-column.props}}{{@key}}: {{~this~}}, {{/each}}
        render(value: any, record: any) {
        {{#if this.isRef}}
          return record["{{getForeignPropertyName @key}}"]["{{getForeignFieldName this.controls.label}}"];
        {{else}}{{#if (isImage this.controls)}}
          if (typeof value === "string" && value) {
            if (
              /^\s*data\s*:\s*image\/[^;];\s*base64\s*,/.test(value) || 
              (value.length < 200 && /\.(jpe?g|bmp|gif|a?png|svg|webp|ico)$/i.test(value))
            ) {
              return <img src={value} className='w-full h-10 lg:h-20'/>;
            }
            else {
              return <a href={value} download>下载</a>
            }
          }
        {{else}}{{#if (isDate this.type)}}
          return value ? dayjs(value).format("{{this.controls.format}}") : value;
        {{else}}
          return value;
        {{/if}}{{/if}}{{/if}}
        }
      },
      {{/if}}
      {{/unless}}
      {{/each}}

      { key: "action", fixed: "right" as "right", width: 150, align: "center" as "center", render(_: any, record: any) {
        return (
          <Space size="middle">
            <a onClick={() => navigate(`${record.id}/edit`)}><AiOutlineEdit className='inline-block relative -top-[2px]' size={16}/> 修 改</a>
            <a onClick={() => navigate(`delete`, { state: {ids: [record.id]} })} className='!text-red-400 hover:!text-red-300'><AiOutlineDelete className='inline-block relative -top-[2px]' size={16}/>删 除</a>
          </Space>
        )
      }},
    ];
  }, [navigate])

  return columns;
}

